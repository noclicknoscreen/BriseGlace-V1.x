{
  "_from": "@google-cloud/speech",
  "_id": "@google-cloud/speech@0.11.0",
  "_inBundle": false,
  "_integrity": "sha512-2eV2g5i1nlLUozrew+/p6kbW79dM3XoGs5bo3q8Zn+gHb4tfHqSGE6ltjfdlDwus3H96e3AfqKPthRJ3oewjkg==",
  "_location": "/@google-cloud/speech",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@google-cloud%2fspeech",
    "fetchSpec": "latest",
    "name": "@google-cloud/speech",
    "raw": "@google-cloud/speech",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@google-cloud",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.11.0.tgz",
  "_shasum": "74f434a370b654cb83e7d02748a8fa15fc4856c3",
  "_spec": "@google-cloud/speech",
  "_where": "/Users/sebastien_albert/MEGA/Projets/2017.11.20_BriseGlace/Repos/BriseGlace-V1.x/V1.0/ServeurGoogleSpeech",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googleapis/nodejs-speech/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Ali Ijaz Sheikh",
      "email": "ofrobots@google.com"
    },
    {
      "name": "Jerjou",
      "email": "jerjou@users.noreply.github.com"
    },
    {
      "name": "Dan Aharon",
      "email": "daharon@google.com"
    },
    {
      "name": "Daryush Laqab",
      "email": "dalaqab@google.com"
    },
    {
      "name": "Dave Gramlich",
      "email": "callmehiphop@gmail.com"
    },
    {
      "name": "Eric Uldall",
      "email": "ericuldall@gmail.com"
    },
    {
      "name": "Ernest Landrito",
      "email": "landrito@google.com"
    },
    {
      "name": "Gus Class",
      "email": "class@google.com"
    },
    {
      "name": "Jason Dobry",
      "email": "jdobry@google.com"
    },
    {
      "name": "Ace Nassri",
      "email": "anassri@google.com"
    },
    {
      "name": "Jun Mukai",
      "email": "mukai@google.com"
    },
    {
      "name": "Luke Sneeringer",
      "email": "lukesneeringer@google.com"
    },
    {
      "name": "Pierre Fritsch",
      "email": "PierreFritsch@users.noreply.github.com"
    },
    {
      "name": "Puneith Kaul",
      "email": "puneith@google.com"
    },
    {
      "name": "Song Wang",
      "email": "songwang@google.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    },
    {
      "name": "Tim Swast",
      "email": "swast@google.com"
    },
    {
      "name": "wanacode",
      "email": "wanacode@users.noreply.github.com"
    }
  ],
  "dependencies": {
    "extend": "^3.0.0",
    "google-gax": "^0.14.2",
    "google-proto-files": "^0.13.1",
    "lodash.merge": "^4.6.0",
    "protobufjs": "^6.8.0",
    "pumpify": "^1.3.5",
    "stream-events": "^1.0.1",
    "through2": "^2.0.3"
  },
  "deprecated": false,
  "description": "Cloud Speech Client Library for Node.js",
  "devDependencies": {
    "@google-cloud/nodejs-repo-tools": "^2.1.1",
    "async": "^2.5.0",
    "codecov": "^3.0.0",
    "eslint": "^4.10.0",
    "eslint-config-prettier": "^2.7.0",
    "eslint-plugin-node": "^5.2.1",
    "eslint-plugin-prettier": "^2.3.1",
    "ink-docstrap": "^1.3.0",
    "intelli-espower-loader": "^1.0.1",
    "jsdoc": "^3.5.5",
    "mocha": "^3.5.3",
    "nyc": "^11.3.0",
    "power-assert": "^1.4.4",
    "prettier": "^1.7.4",
    "safe-buffer": "^5.1.1",
    "sinon": "^2.2.0"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "AUTHORS",
    "LICENSE",
    "protos",
    "src"
  ],
  "homepage": "https://github.com/googleapis/nodejs-speech#readme",
  "keywords": [
    "Google Cloud Speech API",
    "cloud",
    "google",
    "google api",
    "google api client",
    "google apis",
    "google apis client",
    "google cloud",
    "google cloud platform",
    "google speech",
    "speech"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "name": "@google-cloud/speech",
  "optionalDependencies": {},
  "readme": "<img src=\"https://avatars2.githubusercontent.com/u/2810941?v=3&s=96\" alt=\"Google Cloud Platform logo\" title=\"Google Cloud Platform\" align=\"right\" height=\"96\" width=\"96\"/>\n\n# [Google Cloud Speech API: Node.js Client](https://github.com/googleapis/nodejs-speech)\n\n[![release level](https://img.shields.io/badge/release%20level-beta-yellow.svg?style&#x3D;flat)](https://cloud.google.com/terms/launch-stages)\n[![CircleCI](https://img.shields.io/circleci/project/github/googleapis/nodejs-speech.svg?style=flat)](https://circleci.com/gh/googleapis/nodejs-speech)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/googleapis/nodejs-speech?branch=master&svg=true)](https://ci.appveyor.com/project/googleapis/nodejs-speech)\n[![codecov](https://img.shields.io/codecov/c/github/googleapis/nodejs-speech/master.svg?style=flat)](https://codecov.io/gh/googleapis/nodejs-speech)\n\n> Node.js idiomatic client for [Speech API][product-docs].\n\nThe [Cloud Speech API](https://cloud.google.com/speech/docs) enables easy integration of Google speech recognition technologies into developer applications. Send audio and receive a text transcription from the Cloud Speech API service.\n\n\n* [Speech API Node.js Client API Reference][client-docs]\n* [github.com/googleapis/nodejs-speech](https://github.com/googleapis/nodejs-speech)\n* [Speech API Documentation][product-docs]\n\nRead more about the client libraries for Cloud APIs, including the older\nGoogle APIs Client Libraries, in [Client Libraries Explained][explained].\n\n[explained]: https://cloud.google.com/apis/docs/client-libraries-explained\n\n**Table of contents:**\n\n* [Quickstart](#quickstart)\n  * [Before you begin](#before-you-begin)\n  * [Installing the client library](#installing-the-client-library)\n  * [Using the client library](#using-the-client-library)\n* [Samples](#samples)\n* [Versioning](#versioning)\n* [Contributing](#contributing)\n* [License](#license)\n\n## Quickstart\n\n### Before you begin\n\n1.  Select or create a Cloud Platform project.\n\n    [Go to the projects page][projects]\n\n1.  Enable billing for your project.\n\n    [Enable billing][billing]\n\n1.  Enable the Google Cloud Speech API API.\n\n    [Enable the API][enable_api]\n\n1.  [Set up authentication with a service account][auth] so you can access the\n    API from your local workstation.\n\n[projects]: https://console.cloud.google.com/project\n[billing]: https://support.google.com/cloud/answer/6293499#enable-billing\n[enable_api]: https://console.cloud.google.com/flows/enableapi?apiid=speech.googleapis.com\n[auth]: https://cloud.google.com/docs/authentication/getting-started\n\n### Installing the client library\n\n    npm install --save @google-cloud/speech\n\n### Using the client library\n\n```javascript\n// Imports the Google Cloud client library\nconst speech = require('@google-cloud/speech');\nconst fs = require('fs');\n\n// Your Google Cloud Platform project ID\nconst projectId = 'your-project-id';\n\n// Creates a client\nconst client = new speech.SpeechClient({\n  projectId: projectId,\n});\n\n// The name of the audio file to transcribe\nconst fileName = './resources/audio.raw';\n\n// Reads a local audio file and converts it to base64\nconst file = fs.readFileSync(fileName);\nconst audioBytes = file.toString('base64');\n\n// The audio file's encoding, sample rate in hertz, and BCP-47 language code\nconst audio = {\n  content: audioBytes,\n};\nconst config = {\n  encoding: 'LINEAR16',\n  sampleRateHertz: 16000,\n  languageCode: 'en-US',\n};\nconst request = {\n  audio: audio,\n  config: config,\n};\n\n// Detects speech in the audio file\nclient\n  .recognize(request)\n  .then(data => {\n    const response = data[0];\n    const transcription = response.results\n      .map(result => result.alternatives[0].transcript)\n      .join('\\n');\n    console.log(`Transcription: ${transcription}`);\n  })\n  .catch(err => {\n    console.error('ERROR:', err);\n  });\n```\n\n## Samples\n\nSamples are in the [`samples/`](https://github.com/googleapis/nodejs-speech/tree/master/samples) directory. The samples' `README.md`\nhas instructions for running the samples.\n\n| Sample                      | Source Code                       | Try it |\n| --------------------------- | --------------------------------- | ------ |\n| Speech Recognition | [source code](https://github.com/googleapis/nodejs-speech/blob/master/samples/recognize.js) | [![Open in Cloud Shell][shell_img]](https://console.cloud.google.com/cloudshell/open?git_repo=https://github.com/googleapis/nodejs-speech&page=editor&open_in_editor=samples/recognize.js,samples/README.md) |\n\nThe [Speech API Node.js Client API Reference][client-docs] documentation\nalso contains samples.\n\n## Versioning\n\nThis library follows [Semantic Versioning](http://semver.org/).\n\nThis library is considered to be in **beta**. This means it is expected to be\nmostly stable while we work toward a general availability release; however,\ncomplete stability is not guaranteed. We will address issues and requests\nagainst beta libraries with a high priority.\n\nMore Information: [Google Cloud Platform Launch Stages][launch_stages]\n\n[launch_stages]: https://cloud.google.com/terms/launch-stages\n\n## Contributing\n\nContributions welcome! See the [Contributing Guide](https://github.com/googleapis/nodejs-speech/blob/master/.github/CONTRIBUTING.md).\n\n## License\n\nApache Version 2.0\n\nSee [LICENSE](https://github.com/googleapis/nodejs-speech/blob/master/LICENSE)\n\n[client-docs]: https://cloud.google.com/nodejs/docs/reference/speech/latest/\n[product-docs]: https://cloud.google.com/speech/docs\n[shell_img]: http://gstatic.com/cloudssh/images/open-btn.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googleapis/nodejs-speech.git"
  },
  "scripts": {
    "cover": "nyc --reporter=lcov mocha --require intelli-espower-loader test/*.js && nyc report",
    "docs": "repo-tools exec -- jsdoc -c .jsdoc.js",
    "generate-scaffolding": "repo-tools generate all && repo-tools generate lib_samples_readme -l samples/ --config ../.cloud-repo-tools.json",
    "lint": "repo-tools lint --cmd eslint -- src/ samples/ system-test/ test/",
    "prettier": "repo-tools exec -- prettier --write src/*.js src/*/*.js samples/*.js samples/*/*.js test/*.js test/*/*.js system-test/*.js system-test/*/*.js",
    "samples-test": "cd samples/ && npm link ../ && npm test && cd ../",
    "system-test": "repo-tools test run --cmd mocha -- system-test/*.js --no-timeouts",
    "test": "repo-tools test run --cmd npm -- run cover",
    "test-no-cover": "repo-tools test run --cmd mocha -- test/*.js --no-timeouts"
  },
  "version": "0.11.0"
}
